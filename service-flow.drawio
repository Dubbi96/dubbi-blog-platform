<mxfile host="app.diagrams.net" modified="2024-02-28T09:06:19.215Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36" etag="tXedI5_ZfTznm2Bynngb" version="23.1.7" type="github">
  <diagram name="Page-1" id="2YBvvXClWsGukQMizWep">
    <mxGraphModel dx="1688" dy="866" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="1fV30mokUrKp74guWzHp-1" value="&lt;p style=&quot;line-height: 40%;&quot;&gt;&lt;/p&gt;&lt;h1 style=&quot;line-height: 110%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;CustomJsonUsernamePasswordAuthenticationFilter&lt;/span&gt;&lt;/h1&gt;&lt;h1 style=&quot;line-height: 110%;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;- &quot;/login&quot;으로 POST 요청이 오면 인증 절차 실행&lt;/span&gt;&lt;/h1&gt;&lt;div style=&quot;line-height: 120%; font-size: 15px;&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;Function&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 15px;&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&lt;b&gt;-&amp;nbsp;CustomJsonUsernamePasswordAuthenticationFilter()&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; - AntPathRequestMatcher를 통해 &quot;/login&quot; url과 POST method로 요청이 오면 해당 필터를 실행&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;-&amp;nbsp;attemptAuthentication&lt;/font&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;()&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; - application.json의 타입으로 입력된 정보인지 확인&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; - POST 요청으로 들어온 reqeust의 body에 username과 password를 UsernamePasswordAuthenticationToken&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 객체에 넣고 AbstractAuthenticationProcessingFilter의 authenticate() function을 통해 인증 처리&lt;/font&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="460" y="310" width="660" height="290" as="geometry" />
        </mxCell>
        <mxCell id="cRLDKxiATWoi08usjRkC-1" value="&lt;p style=&quot;line-height: 40%;&quot;&gt;&lt;/p&gt;&lt;h1 style=&quot;line-height: 110%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SecurityFilter&lt;/span&gt;&lt;/h1&gt;&lt;h1 style=&quot;line-height: 110%;&quot;&gt;&lt;span style=&quot;font-size: 12px; font-weight: 400;&quot;&gt;- 서버로 들어오는 요청에 대한 Filter를 Chaining 하여 적용&lt;/span&gt;&lt;/h1&gt;&lt;div style=&quot;line-height: 120%; font-size: 15px;&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;Function&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 15px;&quot;&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&lt;b&gt;- filterChain()&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; - FilterChain은 다음과 같은 과정을 거침&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1. cors&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1.1. cors는 Cross-Origin Resource Sharing으로 특정 도메인에서만 백엔드 서버로 접근이 가능하도록 설정&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1.2. corsConfigurationSource는 허용할 오리진, HTTP메소드, 허용할 헤더 설정, 쿠키 사용 여부, pre-flight 캐싱 설정&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2. csrf&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2.1. csrf는 Cross-Site Request Forgery로 해당 공격을 방지하는 보안 기능&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2.2. REST API는 STATELESS 서버를 유지하므로, 해당 설정 비활성화&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3. formLogin&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3.1. 세션 기반의 인증 메커니즘 활성화를 의미&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3.2. REST API는 STATELESS 서버를 유지하므로, 해당 설정 비활성화&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;4. httpBasic&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;4.1. 세션 기반의 인증 메커니즘 활성화를 의미&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;4.2. REST API는 STATELESS 서버를 유지하므로, 해당 설정 비활성화&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;5. sessionManagement&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;5.1. 서버의 상태관리 정보 관리 방식을 설정&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;5.2. SessionCreationPolicy.STATELESS로 설정&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;6. authorizeHttpRequest&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;6.1. 프로젝트에서 리소스 혹은 메소드에 대한 권한 및 인증 절차 필요 여부를 설정&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;6.2. 특정 페이지를 제외하고는 authentication 과정을 거쳐야만 접근 가능&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;7. oauth2Login&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;7.1. OAuth2.0 로그인 에대한 과정과 로그인 절차를 위한 service 매핑&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;7.2. SuccessHandler, FailureHandler, OAuth2UserService를 사용하여 로그인 과정을 정의&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;8. &lt;b&gt;CustomJsonUsernamePasswordAuthenticationFilter 설정&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;8.1. 해당 필터를 springSecurity의 기본 filter의 LogoutFilter 이후에 작용되도록 적용&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;9. jwtAuthenticationProcessingFilter 설정&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-weight: bold; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;font-weight: bold; white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;9.1. 해당 필터를 CustomJsonUsernamePasswordAuthenticationFilter 이전에 설정&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;FilterChain에서 의 절차&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;1. http.FilterChain 우선 적용&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;2. filterChian에서 Logut이 발생할 경우&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2.1. jwtAuthenticationProcessingFilter 실행&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 120%; font-size: 13px;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2.2. customJsonUsernamePasswordAuthenticationFilter 실행&lt;br&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-650" y="80" width="810" height="720" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
